<modification>
	<id><![CDATA[Product Series - Core]]></id>
	<version><![CDATA[1.6]]></version>
	<vqmver><![CDATA[2.x]]></vqmver>
	<author><![CDATA[WeDoWeb.com.au | contact@wedoweb.com.au]]></author>
	<!--ADMIN-->
	<file name="admin/controller/catalog/product.php">
		<operation error="log">
			<search position="before"><![CDATA[if (isset($this->error['warning'])) {]]></search>
			<add><![CDATA[//BOF Product Series
			
			if (isset($this->error['master_product'])) {
				$this->data['error_master_product'] = $this->error['master_product'];
			} else {
				$this->data['error_master_product'] = '';
			}
			
			if (isset($this->request->post['new_product_name'])) {
				$this->data['new_product_name'] = $this->request->post['new_product_name'];
			} else {
				$this->data['new_product_name'] = '';
			}
			
			if (isset($this->request->post['new_product_code'])) {
				$this->data['new_product_code'] = $this->request->post['new_product_code'];
			} else {
				$this->data['new_product_code'] = '';
			}
			
			if (isset($this->request->post['master_product'])) {
				$this->data['master_product'] = $this->request->post['master_product'];
			} else {
				$this->data['master_product'] = '-1';
			}
			
			//get existing colors		
			$this->load->model('catalog/special_attribute');		
			$this->load->model('catalog/product_special_attribute');
			$this->load->model('catalog/product_master');	
			
			$results = $this->model_catalog_special_attribute->getAllSpecialAttribute('2'); //2 is Image
			$this->data['all_product_colors'] = array();
			foreach($results as $result)
			{
				$this->data['all_product_colors'][] = array(
					'color_id' => $result['special_attribute_id'],
					'color_name' => $result['special_attribute_name'],
					'color_code' => $result['special_attribute_value'],
				);
			}
			
			//get list of available master products
			$this->data['all_master_product'] = $this->model_catalog_product_master->getAllMasterableProducts('2'); //2 is Image
			
			if (isset($this->request->post['product_series_image'])) {
				$this->data['product_series_image'] = $this->request->post['product_series_image'];
			} elseif (isset($this->request->get['product_id'])) {
				$psa = $this->model_catalog_product_special_attribute->getProductSpecialAttribute($this->request->get['product_id'], '2'); //'2' is image
				 
				$this->data['product_series_image'] = $psa['special_attribute_value'];
			} else {
				$this->data['product_series_image'] = 'no_image.jpg'; //NA by default
			}
			
			$this->load->model('tool/image');			
			
			if (isset($this->data['product_series_image']) && file_exists(DIR_IMAGE . $this->data['product_series_image'])) {
				if($this->data['product_series_image'] != '')
				{
					$this->data['product_series_thumb'] = $this->model_tool_image->resize($this->data['product_series_image'], 100, 100);
				}
				else
				{
					$this->data['product_series_thumb'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);
				}
			} else {
				$this->data['product_series_thumb'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);
			}
			
			if (isset($this->request->post['master_product'])) {
				$this->data['master_product'] = $this->request->post['master_product'];
			} elseif (isset($this->request->get['product_id'])) {
				$this->data['master_product'] = $this->model_catalog_product_master->getMasterProductId($this->request->get['product_id'], '2'); //2 is Image
			} else {
				$this->data['master_product'] = '-1'; //is single item by default
			}
			
			if(isset($this->request->get['product_id']))
			{
				$product_id = $this->request->get['product_id'];
				$this->data['product_id'] = $product_id;
				
				//$this->data['current_product_color'] = $this->model_catalog_product_special_attribute->getProductSpecialAttribute($product_id, '2'); //2 is Image
				
				$this->data['color_linked_products'] = array();
				$results = $this->model_catalog_product_master->getLinkedProducts($product_id, '2'); //2 is Image
				foreach($results as $result)
				{
					$this->data['color_linked_products'][] = array(
						'product_id' => $result['product_id'],
						'product_name' => $result['product_name'],
						'product_model' => $result['product_model'],				
						'color_name' => $result['special_attribute_name'],					
						'product_series_thumb' => $result['special_attribute_value'] != '' ?
						$this->model_tool_image->resize($result['special_attribute_value'], 50, 50) :
						$this->model_tool_image->resize($result['image'], 50, 50)	,
						'edit_href' => $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $result['product_id'], 'SSL')
					);
				}
			}
			else
			{
				$this->data['product_id'] = '';
				//$this->data['current_product_color'] = '';
				$this->data['color_linked_products'] = array();
			}
			
			//get product color option
			if (isset($this->request->post['color_option'])) {
				$this->data['color_option'] = $this->request->post['color_option'];
			/*} else if ((int)$this->data['current_product_color'] > 0){
				$this->data['color_option'] = 'existingColor';
			}*/
			} else{
				$this->data['color_option'] = 'colorNotAvailable';
			}
			
			//get Product Series type
			$this->data['is_single_item'] = (int)$this->data['master_product'] == -1;
			$this->data['is_product_series_master'] = (int)$this->data['master_product'] == 0;
			$this->data['is_product_series_slave'] = (int)$this->data['master_product'] > 0;		
			$this->data['is_linked_product_series_master'] = ($this->data['is_product_series_master'] && sizeof($this->data['color_linked_products']) > 0);
			
			//text
			$this->load->language('catalog/pds');
			$this->setDataLang('entry_this_product');
			$this->setDataLang('entry_product_series_image');
			$this->setDataLang('entry_link_to_a_product_series');
			
			$this->data['tab_product_series'] = $this->language->get('tab_product_series');
			
			$this->data['text_is_a_product_series_master'] = $this->language->get('text_is_a_product_series_master');
			$this->data['text_product_under_same_product_series'] = $this->language->get('text_product_under_same_product_series');
			$this->data['text_edit'] = $this->language->get('text_edit');
			$this->data['text_confirm_leave_page'] = $this->language->get('text_confirm_leave_page');
			$this->data['text_is_single_item'] = $this->language->get('text_is_single_item');
			$this->data['text_is_product_series_master'] = $this->language->get('text_is_product_series_master');
			$this->data['text_is_product_series_slave'] = $this->language->get('text_is_product_series_slave');			
			$this->setDataLang('text_help_product_series_image');
			
			$this->setDataLang('column_image');
			$this->data['column_name'] = $this->language->get('column_name');
			$this->data['column_action'] = $this->language->get('column_action');
			$this->data['column_model'] = $this->language->get('column_model');
			
			$this->data['button_create_product_series'] = $this->language->get('button_create_product_series');
			
			//EOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="before"><![CDATA[if ($this->error && !isset($this->error['warning'])) {]]></search>
			<add><![CDATA[//BOF Product Series
			$this->load->model('catalog/special_attribute');
			
			//- link to master product -> if the passed product is not a master one -> return error message
			if(isset($this->request->post['master_product']))
			{
				if((int)$this->request->post['master_product'] > 0)
				{
					$this->load->model('catalog/product_master');
					if(!$this->model_catalog_product_master->isMasterable($this->request->post['master_product'], '2')) //2 is Image
					{
						$this->error['master_product'] = $this->language->get('error_master_product');
					}
					
					if(isset($this->request->post['product_id'])) //update product
					{			
						if($this->model_catalog_product_master->isMaster($this->request->post['product_id'], '2')) //2 is Image
						{
							$this->error['master_product'] = $this->language->get('error_master_product_cannot_be_changed');
						}
					}
				}
			}
			//EOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="after"><![CDATA[$this->data['delete']]]></search>
			<add><![CDATA[
			//BOF Product Series
			$this->data['create_product_series'] = $this->url->link('catalog/product/createProductSeries', 'token=' . $this->session->data['token'] . $url, 'SSL');
			//EOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="before" offset="1"><![CDATA[?>]]></search>
			<add><![CDATA[//BOF Product Series
			public function createProductSeries() {
				$this->load->language('catalog/product');
				$this->load->language('catalog/pds');
				
				$this->document->setTitle($this->language->get('heading_title'));
				
				$this->load->model('catalog/product'); //for getlist
				$this->load->model('catalog/product_master');
				
				if ($this->validateCreateProductSeries()) {
					
					$this->model_catalog_product_master->createProductSeries($this->request->post['selected'], '2');

					$this->session->data['success'] = $this->language->get('text_success_series_created');
					
					$url = '';
					
					if (isset($this->request->get['filter_name'])) {
						$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
					}
				  
					if (isset($this->request->get['filter_model'])) {
						$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
					}
					
					if (isset($this->request->get['filter_price'])) {
						$url .= '&filter_price=' . $this->request->get['filter_price'];
					}
					
					if (isset($this->request->get['filter_quantity'])) {
						$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
					}	
				
					if (isset($this->request->get['filter_status'])) {
						$url .= '&filter_status=' . $this->request->get['filter_status'];
					}
							
					if (isset($this->request->get['sort'])) {
						$url .= '&sort=' . $this->request->get['sort'];
					}

					if (isset($this->request->get['order'])) {
						$url .= '&order=' . $this->request->get['order'];
					}

					if (isset($this->request->get['page'])) {
						$url .= '&page=' . $this->request->get['page'];
					}
					
					$this->redirect($this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url, 'SSL'));
				}

				$this->getList();
			}
			
			private function validateCreateProductSeries() {
				if (!$this->user->hasPermission('modify', 'catalog/product')) {
					$this->error['warning'] = $this->language->get('error_permission');  
				}
				
				if(!isset($this->request->post['selected']))
				{
					$this->error['warning'] = $this->language->get('error_no_product_selected');  
				}
				else if(sizeof($this->request->post['selected']) == 0)
				{
					$this->error['warning'] = $this->language->get('error_no_product_selected');  
				}
				else
				{
					$unslavable_names = array();
					
					foreach($this->request->post['selected'] as $product_id)
					{
						if (!$this->model_catalog_product_master->isSlavable($product_id, '2')) {
							//$this->error['warning'] = $this->language->get('error_cannot_be_added_to_a_series');  
							$product = $this->model_catalog_product->getProduct($product_id);
							
							array_push($unslavable_names, $product['name']);
						}
					}
					
					if(sizeof($unslavable_names) > 0)
					{
						$this->error['warning'] = $this->language->get('error_cannot_be_added_to_a_series');
						
						$this->error['warning'] .= '<ul>';
						
						foreach($unslavable_names as $unslavable_name)
						{
							$this->error['warning'] .= '<li>' . $unslavable_name . '</li>';
						}
						
						$this->error['warning'] .= '</ul>';
					}
				}
				
				if (!$this->error) {
					return true;
				} else {
					return false;
				}
			}
			//EOF Product Series]]></add>
		</operation>
	</file>
	<file name="admin/model/catalog/product.php">
		<operation error="log">
			<search position="before" index="1"><![CDATA[$this->cache->delete('product');]]></search>
			<add><![CDATA[//BOF Product Series
			//insert product|color
			$this->load->model('catalog/product_special_attribute');
			$this->load->model('catalog/special_attribute');			
			if(!isset($data['product_series_image']))
				$data['product_series_image'] = '';
			
			$data['special_attribute_group_id'] = '2'; //2 is image
			$this->model_catalog_product_special_attribute->editProductSpecialAttribute(array(
				'product_id' => $product_id,
				'special_attribute_id' => $this->model_catalog_special_attribute->getImageId($data)
			));

			//insert product|master product
			$this->load->model('catalog/product_master');			
			$master_product_id = $this->model_catalog_product_master->getMasterProductIdFromData($data);
			if($master_product_id == 0 || $master_product_id > 0) //is either series or series item
			{
				$this->model_catalog_product_master->addLink(array(
					'product_id' => $product_id,
					'master_product_id' => $master_product_id,
					'special_attribute_group_id' => '2' //2 is image
				));
			}
			//EOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="before" index="2"><![CDATA[$this->cache->delete('product');]]></search>
			<add><![CDATA[//BOF Product Series
			//update product|color
			if(isset($data['product_series_image']))
			{
				$this->load->model('catalog/product_special_attribute');
				$this->load->model('catalog/special_attribute');
				$data['special_attribute_group_id'] = '2'; //2 is image
				$this->model_catalog_product_special_attribute->editProductSpecialAttribute(array(
					'product_id' => $product_id,
					'special_attribute_id' => $this->model_catalog_special_attribute->getImageId($data)
				));
			}

			//update product|master product
			$this->load->model('catalog/product_master');
			$master_product_id = $this->model_catalog_product_master->getMasterProductIdFromData($data);
						
			$this->model_catalog_product_master->editLink(array(
				'product_id' => $product_id,
				'master_product_id' => $master_product_id,
				'special_attribute_group_id' => '2' //2 is image
			));
			//EOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="before"><![CDATA[$this->addProduct($data);]]></search>
			<add><![CDATA[//BOF Product Series
			$this->load->model('catalog/product_special_attribute');			
			$this->load->model('catalog/product_master');
			$data = array_merge($data, array('product_color' => $this->model_catalog_product_special_attribute->getProductSpecialAttribute($product_id, '2'))); //2 is image
			$data = array_merge($data, array('master_product' => $this->model_catalog_product_master->getMasterProductId($product_id, '2'))); //2 is image
			//BOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="before" index="3"><![CDATA[$this->cache->delete('product');]]></search>
			<add><![CDATA[//BOF Product Series
			//delete product|color
			$this->load->model('catalog/product_special_attribute');
			$this->model_catalog_product_special_attribute->deleteProductSpecialAttribute(array(
				'product_id' => $product_id
			));

			//delete product|master product
			$this->load->model('catalog/product_master');
			$this->model_catalog_product_master->deleteLink(array(
				'product_id' => $product_id
			));
			//EOF Product Series]]></add>
		</operation>
		<operation error="log">
			<search position="after"><![CDATA[$this->cache->delete('product');]]></search>
			<add><![CDATA[//BOF Product Series	
			if(isset($product_id))
				return $product_id;
			//EOF Product Series]]></add>
		</operation>
	</file>	
	<file name="admin/view/*/catalog/product_form.tpl">	
		<operation error="log">
			<search position="replace"><![CDATA[<?php echo $tab_design; ?></a>]]></search>
			<add><![CDATA[<!--BOF Product Series-->
			<?php echo $tab_design; ?></a><a class="" style="display: inline;" href="#tab-productColor"><?php echo $tab_product_series; ?></a>
			<!--EOF Product Series-->]]></add>
		</operation>
		<operation error="log">
			<search position="before"><![CDATA[</form>]]></search>
			<add><![CDATA[<!--BOF Product Series -->
			<div id="tab-productColor">
				<table class="form">
				  <tr>
					<td><span class="required">*</span> <?php echo $entry_this_product; ?></td>
					<td>
						<input type="radio" name="color_series_type" value="singleItem"
						<?php echo $is_single_item ? 'checked' : ''; ?> 
						<?php echo $is_linked_product_series_master ? 'disabled="disabled"' : ''; ?>/>
						<?php echo $text_is_single_item; ?><br/>
						<input type="radio" name="color_series_type" value="colorSeriesMaster"
						<?php echo $is_product_series_master ? 'checked' : ''; ?>/>
						<?php echo $text_is_product_series_master; ?><br/>
						<input type="radio" name="color_series_type" value="colorSeriesSlave"
						<?php echo $is_product_series_slave ? 'checked' : ''; ?> 
						<?php echo $is_linked_product_series_master ? 'disabled="disabled"' : ''; ?>/>
						<?php echo $text_is_product_series_slave; ?><br/>
					</td>
				  </tr>
				  <tr id="tbl_product_color">
					<td>
						<?php echo $entry_product_series_image; ?>
						<span class="help"><?php echo $text_help_product_series_image; ?></span>
					</td>
					<td>
						<div class="image">
							<img src="<?php echo $product_series_thumb; ?>" alt="" id="product_series_thumb" /><br />
							<input type="hidden" name="product_series_image" value="<?php echo $product_series_image; ?>" id="product_series_image" />
							<a onclick="image_upload('product_series_image', 'product_series_thumb');"><?php echo $text_browse; ?></a>&nbsp;&nbsp;|&nbsp;&nbsp;
							<a onclick="$('#product_series_thumb').attr('src', '<?php echo $no_image; ?>'); $('#product_series_image').attr('value', '');"><?php echo $text_clear; ?></a>
						</div>
					</td>
				  </tr>
				  <tr id="tbl_product_series_link">
					<td><?php echo $entry_link_to_a_product_series; ?></td>
					<td>
						<?php if($is_product_series_master){ ?>
							<?php echo $text_is_a_product_series_master; ?>
						<?php } ?>
						<div>
							<select name="master_product"><!--Load list of product that can be set as master product (master products are not link to any other master product, only master products will be visible on listing pages)-->
								<?php foreach($all_master_product as $m_product){
									if($m_product['product_id'] != $product_id)
									{
								?>
								<option value="<?php echo $m_product['product_id']; ?>" <?php echo isset($master_product) && $master_product == $m_product['product_id'] ? 'selected' : ''; ?>><?php echo $m_product['product_name']; ?></option>
								<?php }
								} ?>
							</select>
							<?php if ($error_master_product) { ?>
							<span class="error"><?php echo $error_master_product; ?></span>
							<?php } ?>
						</div>
					</td>
				  </tr>
				</table>
				<?php if(isset($color_linked_products) && $color_linked_products) { ?>
					<div id="wrp_linked_products">
					<h2><?php echo $text_product_under_same_product_series; ?></h2>
					<table class="list">
					<thead>
					<tr>
						<td class="left">
							<?php echo $column_name; ?> (<?php echo $column_model; ?>)
						</td>
						<td class="left">
							<?php echo $column_image; ?>
						</td>					
						<td class="right">				
							<?php echo $column_action; ?>
						</td>
					</tr>
					</thead>
					<?php foreach($color_linked_products as $l_product) { ?>
						<tbody>
						<tr>
							<td class="left">
								<?php echo $l_product['product_name']; ?> (<?php echo $l_product['product_model']; ?>)
							</td>
							<td class="left">
								<img alt="<?php echo $l_product['product_name']; ?>" src="<?php echo $l_product['product_series_thumb']; ?>" />
							</td>
							<td class="right">
								<?php if($l_product['product_id'] != $product_id) { ?>
									[<a onclick="return confirm('<?php echo $text_confirm_leave_page; ?>');" href="<?php echo $l_product['edit_href']; ?>" title="<?php echo $l_product['color_name']; ?>"><?php echo $text_edit; ?></a>]
								<?php } ?>
							</td>
						</tr>
						</tbody>
					<?php } ?>
					</table>
					</div>
				<?php } ?>
			</div>
			<!--EOF Product Series -->]]></add>
		</operation>
		<operation error="log">
			<search position="before"><![CDATA[<?php echo $footer; ?>]]></search>
			<add><![CDATA[<!--BOF Product Series -->
			<script type="text/javascript"><!--

			function initColorSeriesTypeChanged()
			{
				$("input[name='color_series_type']").click(function()
				{
					onColorSeriesTypeChanged($(this).val());
				});
			}

			function onColorSeriesTypeChanged(colorSeriesType)
			{
				if(colorSeriesType == 'singleItem') //is single item
				{
					$('#tbl_product_series_link').hide();
					$('#wrp_linked_products').hide();
					
					//colorNotAvailable is for single item only	
					$rbtcolorNotAvailable = $('input[name="color_option"]:eq(0)');
					$rbtcolorNotAvailable.removeAttr('disabled');
				}
				else
				{
					if(colorSeriesType == 'colorSeriesMaster') //is a Product Series master
					{
						$('#tbl_product_series_link').hide();
						$('#wrp_linked_products').show();
					}
					else //is a Product Series slave
					{
						$('#tbl_product_series_link').show();
						$('#wrp_linked_products').show();
					}
					
					//colorNotAvailable is for single item only		
					$rbtcolorNotAvailable = $('input[name="color_option"]:eq(0)');
					$rbtcolorNotAvailable.attr('disabled', 'disabled');
					
					if($rbtcolorNotAvailable.is(':checked'))
					{
						$('input[name="color_option"]:eq(1)').attr('checked', 'checked');
					}
				}
			}

			$(document).ready(
				function()
				{
					onColorSeriesTypeChanged($("input[name='color_series_type']:checked").val());
					initColorSeriesTypeChanged();
				}
			);
			//--></script> 
			<!--EOF Product Series -->]]></add>
		</operation>
	</file>
	<file name="admin/view/*/catalog/product_list.tpl">	
		<operation error="log">
			<search position="replace"><![CDATA[<div class="buttons">]]></search>
			<add><![CDATA[<div class="buttons">
			<!--BOF Product Series-->
			<a onclick="$('#form').attr('action', '<?php echo $create_product_series; ?>'); $('#form').submit();" class="button"><span><?php echo $button_create_product_series; ?></span></a>
			<!--EOF Product Series-->]]></add>
		</operation>
	</file>
	<!--CATALOG-->
	<file name="catalog/controller/checkout/cart.php">
		<operation error="log">
			<search position="before"><![CDATA[if ($product_info) {]]></search>
			<add><![CDATA[//BOF Product Series
			$this->load->model('catalog/product_master');
			if(!isset($product_id))
				$product_id = $this->request->post['product_id'];
			
			$pds_allow_buying_series = false;
			if ($this->config->get('pds_allow_buying_series'))
			{ 
				$pds_allow_buying_series = $this->config->get('pds_allow_buying_series');
			}
			$is_master = $this->model_catalog_product_master->isMaster($product_id, '2'); //2 is Image
			
			if($is_master && !$pds_allow_buying_series)
			{
				$json['redirect'] = str_replace('&amp;', '&', $this->url->link('product/product', 'product_id=' . $this->request->post['product_id']));
			
				$this->response->setOutput(json_encode($json));	
				return;
			}
			//EOF Product Series]]></add>
		</operation>
	</file>	
	<file name="catalog/controller/product/category.php">
		<operation error="log">
			<search position="before"><![CDATA[$url = '';]]></search>
			<add><![CDATA[//BOF Product Series	
			$pds_show_thumbnails = $this->getData('pds_show_thumbnails', 1);
			
			if($pds_show_thumbnails)
			{
				if(isset($this->data['products']))
				{
					$pds_list_thumbnail_width = $this->getData('pds_list_thumbnail_width', 20);
					$pds_list_thumbnail_height = $this->getData('pds_list_thumbnail_height', 20);
					$pds_thumbnail_hover_effect = $this->getData('pds_thumbnail_hover_effect', 'rollover');
					
					if($pds_thumbnail_hover_effect == 'rollover')
					{
						$pds_list_hover_width = $this->config->get('config_image_product_width');
						$pds_list_hover_height = $this->config->get('config_image_product_height');
						$pds_list_thumbnail_class = 'pds-thumb-rollover';
					}
					else if($pds_thumbnail_hover_effect == 'preview')
					{
						$pds_list_hover_width = $this->getData('pds_list_preview_width', 200);
						$pds_list_hover_height = $this->getData('pds_list_preview_height', 200);
						$pds_list_thumbnail_class = 'preview';
					}
					else //none
					{
						$pds_list_thumbnail_class = '';
					}
					
					$this->load->model('catalog/product_master');
					$linkedProducts = $this->model_catalog_product_master->getAllLinkedProducts('2'); //2 is Image
					
					foreach ($this->data['products'] as &$product) //& is for reference
					{
						$product['pds'] = array();
						
						foreach ($linkedProducts as $result) {
							if($result['master_product_id'] == $product['product_id'])
							{
								$product_pds_image = $result['special_attribute_value'] != '' 
								? $this->model_tool_image->resize($result['special_attribute_value'], $pds_list_thumbnail_width, $pds_list_thumbnail_height)
								: $this->model_tool_image->resize($result['image'], $pds_list_thumbnail_width, $pds_list_thumbnail_height);
								
								if($pds_thumbnail_hover_effect == 'rollover' || $pds_thumbnail_hover_effect == 'preview')
								{
									$product_pds_image_hover = $this->model_tool_image->resize($result['image'], $pds_list_hover_width, $pds_list_hover_height);
								}
								else //none
								{
									$product_pds_image_hover = '';
								}
							
								$product['pds'][] = array(
									'product_link' => $this->url->link('product/product', $url . '&product_id=' . $result['product_id']),
									'product_name' => $result['product_name'],
									'product_pds_image' => $product_pds_image,
									'product_master_image' => $product['thumb'],
									'product_pds_image_hover' => $product_pds_image_hover,
									'pds_list_thumbnail_class' => $pds_list_thumbnail_class
								);
							}
						}
					}
				}
			}
			else
			{
				if(isset($this->data['products']))
				{
					foreach ($this->data['products'] as &$product) //& is for reference
					{
						$product['pds'] = array();
					}
				}
			}
			//EOF Product Series]]></add>
		</operation>
	</file>
	<file name="catalog/controller/product/product.php">
		<operation error="log">
			<search position="before"><![CDATA[$this->model_catalog_product->updateViewed($this->request->get['product_id']);]]></search>
			<add><![CDATA[//BOF Product Series 
			//get link of linked products + colors
			$pds_allow_buying_series = $this->getData('pds_allow_buying_series', 0);
			
			$this->load->model('catalog/product_master');
			$results = $this->model_catalog_product_master->getLinkedProducts($this->request->get['product_id'], '2', $pds_allow_buying_series); //'2' is Image
			
			$this->data['pds'] = array();
			
			$pds_detail_thumbnail_width = $this->getData('pds_detail_thumbnail_width', 50);
			$pds_detail_thumbnail_height = $this->getData('pds_detail_thumbnail_height', 50);
			$pds_preview_width = $this->getData('pds_preview_width', 200);
			$pds_preview_height = $this->getData('pds_preview_height', 200);
			$this->data['pds_enable_preview'] = $this->getData('pds_enable_preview', 1);
			
			foreach ($results as $result)
			{
				$product_pds_image = ($result['special_attribute_value'] != '' && strtolower($result['special_attribute_value']) != 'no_image.jpg')
					? $this->model_tool_image->resize($result['special_attribute_value'], $pds_detail_thumbnail_width, $pds_detail_thumbnail_height)
					: $this->model_tool_image->resize($result['image'], $pds_detail_thumbnail_width, $pds_detail_thumbnail_height);
				
				$product_main_image = ($result['image'] != '' && strtolower($result['image']) != 'no_image.jpg')
					? $this->model_tool_image->resize($result['image'], $pds_preview_width, $pds_preview_height) //user default main image
					: $this->model_tool_image->resize($result['special_attribute_value'], $pds_preview_width, $pds_preview_height); // use series image
			
				$this->data['pds'][] = array(
					'product_id' => $result['product_id'],
					'product_link' => $this->url->link('product/product', $url . '&product_id=' . $result['product_id']),
					'product_name' => $result['name'],
					'product_pds_image' => $product_pds_image,
					'product_main_image' => $product_main_image
				);
			}
			
			$this->load->model('catalog/product_master');
			$this->load->language('product/pds');
			
			if(!isset($this->data['display_add_to_cart']))
			{
				$is_master = $this->model_catalog_product_master->isMaster($this->request->get['product_id'], '2'); //2 is Image
				$pds_allow_buying_series = $this->getData('pds_allow_buying_series', 0);
				$this->data['display_add_to_cart'] = !$is_master || $pds_allow_buying_series;
				$this->data['no_add_to_cart_message'] = $this->language->get('text_select_series_item');
			}
			
			$this->data['text_in_the_same_series'] = $this->language->get('text_in_the_same_series');
			//EOF Product Series ]]></add>
		</operation>
	</file>
	<file name="catalog/model/catalog/product.php">
		<operation error="log">
			<search position="replace"><![CDATA[WHERE pd.language_id]]></search>
			<add><![CDATA[LEFT JOIN " . DB_PREFIX . "product_master pm "
			. " ON pm.product_id = p.product_id "
			. " WHERE (pm.master_product_id = -1 "; //do not change

			if($this->config->get('pds_hide_from_list_view'))
				$pds_hide_from_list_view = $this->config->get('pds_hide_from_list_view');
			else
				$pds_hide_from_list_view = 'items';
			
			if($pds_hide_from_list_view == 'series')
			{
				$sql .= " OR pm.master_product_id > 0 "; //= 0: master, > 0: slave
			}
			elseif($pds_hide_from_list_view == 'none')
			{
				$sql .= " OR pm.master_product_id > 0 ";
				$sql .= " OR pm.master_product_id = 0 ";
			}
			else //'item' or default
			{
				$sql .= " OR pm.master_product_id = 0 ";
			}
			
			$sql .= " OR pm.master_product_id IS NULL) AND pd.language_id]]></add>
		</operation>
	</file>
</modification>
