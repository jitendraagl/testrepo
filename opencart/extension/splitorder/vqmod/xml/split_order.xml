<modification>
	<id><![CDATA[Split Order]]></id>
	<version><![CDATA[2.1.0]]></version>
	<vqmver><![CDATA[2.1.5]]></vqmver>
	<author><![CDATA[The Krotek]]></author>
	
	<!-- Admin: Settings -->
	
	<file name="admin/controller/setting/setting.php">		
		<operation>
			<search position="before"><![CDATA[$this->data['entry_name'] = $this->language->get('entry_name');]]></search>
			<add><![CDATA[
			
			$this->data['heading_title_split'] = $this->language->get('heading_title_split');
			
			$this->data['entry_split_notify'] = $this->language->get('entry_split_notify');
			$this->data['help_split_notify'] = $this->language->get('help_split_notify');
			
			$this->data['entry_split_status'] = $this->language->get('entry_split_status');
			$this->data['help_split_status'] = $this->language->get('help_split_status');
			
			if (isset($this->request->post['config_split_notify'])) {
				$this->data['config_split_notify'] = $this->request->post['config_split_notify'];
			} elseif ($this->config->get('config_split_notify')) {
				$this->data['config_split_notify'] = $this->config->get('config_split_notify');
			} else {
				$this->data['config_split_notify'] = 0;
			}

			$this->load->model('localisation/order_status');

			$this->data['split_statuses'] = $this->model_localisation_order_status->getOrderStatuses();
			
			array_unshift($this->data['split_statuses'], array('order_status_id' => '', 'name' => $this->language->get('text_split_default')));
			
			if (isset($this->request->post['split_status_id'])) {
				$this->data['split_status_id'] = $this->request->post['split_status_id'];
			} elseif ($this->config->get('split_status_id')) {
				$this->data['split_status_id'] = $this->config->get('split_status_id');
			} else {
				$this->data['split_status_id'] = "";
			}
						
			]]></add>
		</operation>
	</file>
		
	<file name="admin/view/template/setting/setting.tpl">
		<operation>
			<search position="before"><![CDATA[<h2><?php echo $text_product; ?></h2>]]></search>
			<add><![CDATA[
          	
         	<h2><?php echo $heading_title_split; ?></h2>
          	
          	<table class="form">
            	<tr>
             		<td>
             			<?php echo $entry_split_notify; ?>
             			<span class="help"><?php echo $help_split_notify; ?></span>
             		</td>
              		<td>
                		<input type="radio" name="config_split_notify" value="1"<?php echo ($config_split_notify ? ' checked="checked"' : ""); ?> /> <?php echo $text_yes; ?>
                		<input type="radio" name="config_split_notify" value="0"<?php echo (!$config_split_notify ? ' checked="checked"' : ""); ?> /> <?php echo $text_no; ?>
                	</td>
            	</tr>
          		<tr>
					<td>
             			<?php echo $entry_split_status; ?>
             			<span class="help"><?php echo $help_split_status; ?></span>
             		</td>
            		<td>
            			<select name="split_status_id">
                			<?php foreach ($split_statuses as $order_status) { ?>
               					<option value="<?php echo $order_status['order_status_id']; ?>"<?php echo ($order_status['order_status_id'] == $split_status_id ? ' selected="selected"' : ''); ?>><?php echo $order_status['name']; ?></option>
                			<?php } ?>
              			</select>
              		</td>
          		</tr>
            </table>
            
			]]></add>
		</operation>
	</file>
	
	<!-- Admin: Order -->
	
	<file name="admin/controller/sale/order.php">		
		<operation>
			<search position="before"><![CDATA[if (!isset($this->request->get['order_id'])) {]]></search>
			<add><![CDATA[
			
			$this->data['text_split'] = $this->language->get('text_split');
					
			$this->data['button_split'] = $this->language->get('button_split');
			
			$this->data['split'] = $this->url->link('sale/order/split', 'token='.$this->session->data['token'].'&order_id='.$this->request->get['order_id'].$url, 'SSL');
			
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[class ControllerSaleOrder extends Controller {]]></search>
			<add><![CDATA[
			
  			public function split()
  			{
				if (!defined('AceShop')) define("AceShop", "");
				if (!defined('AceShopOpencart')) define("AceShopOpencart", "");
				
				if (!defined('MijoShop')) define("MijoShop", "");
				if (!defined('MijoShopOpencart')) define("MijoShopOpencart", "");
				
  				// Add cart and customer libraries to admin
  				
  				if (array_key_exists('vqmod', $GLOBALS)) {
  					$vqmod = new VQMod();
					require_once($vqmod->modCheck(DIR_SYSTEM.'library/tax.php'));
        			require_once($vqmod->modCheck(DIR_SYSTEM.'library/cart.php'));
        			require_once($vqmod->modCheck(DIR_SYSTEM.'library/customer.php'));
        		} else {
        			require_once(VQMod::modCheck(DIR_SYSTEM.'library/tax.php'));
        			require_once(VQMod::modCheck(DIR_SYSTEM.'library/cart.php'));
        			require_once(VQMod::modCheck(DIR_SYSTEM.'library/customer.php'));	
        		}

				if (class_exists('AceShop')) {
					if (!class_exists('AceShopOpencart')) require_once(JPATH_SITE.'/components/com_aceshop/aceshop/opencart.php');
        			AceShopOpencart::$registry->set('customer', new Customer(AceShopOpencart::$registry));
            		AceShopOpencart::$registry->set('tax', new Tax(AceShopOpencart::$registry));
        			AceShopOpencart::$registry->set('cart', new Cart(AceShopOpencart::$registry));
				} elseif (class_exists('MijoShop')) {
					if (!class_exists('MijoShopOpencart')) require_once(JPATH_SITE.'/components/com_mijoshop/mijoshop/opencart.php');
            		MijoShopOpencart::$registry->set('customer', new Customer(MijoShopOpencart::$registry));
        			MijoShopOpencart::$registry->set('tax', new Tax(MijoShopOpencart::$registry));
        			MijoShopOpencart::$registry->set('cart', new Cart(MijoShopOpencart::$registry));
				} else {
					$this->registry->set('customer', new Customer($this->registry));
					$this->registry->set('tax', new Tax($this->registry));
					$this->registry->set('cart', new Cart($this->registry));
				}
  			
  				$this->load->model('setting/extension');
				$this->load->model('localisation/country');
				$this->load->model('localisation/zone');
				$this->load->model('sale/order');
				 				
				$newtaxes = array();
				$oldtaxes = array();
				
				// Get old order info and set currency 
  				
				$neworder = $this->request->post;
				$oldorder = $this->request->post;
								
				$oldid = $this->request->get['order_id'];
				$order_info = $this->model_sale_order->getOrder($oldid);
				$this->currency->set($order_info['currency_code']);

				$neworder['currency_id'] = $order_info['currency_id'];
				$neworder['currency_code'] = $order_info['currency_code'];
				$neworder['currency_value'] = $order_info['currency_value'];
				
  				// Get splitted products

				$splitted = $this->request->post['splitted'];

  				foreach ($neworder['order_product'] as $key => $product) {
  					if (!in_array($product['order_product_id'], $splitted)) {
  						unset($neworder['order_product'][$key]);
  					} else {
  						$neworder['order_product'][$key]['order_product_id'] = "";
  						unset($oldorder['order_product'][$key]);  						
  					}
  				}
			
  				$neworder['order_product'] = array_values($neworder['order_product']);
  				$oldorder['order_product'] = array_values($oldorder['order_product']);

  				// Define necessary session variables
				
				$option_data = array();
				$this->session->data['cart'] = array();
	
				foreach ($neworder['order_product'] as $order_product) {
					if (isset($order_product['order_option'])) {
						foreach ($order_product['order_option'] as $option) {
							if ($option['type'] == 'select' || $option['type'] == 'radio' || $option['type'] == 'image') { 
									$option_data[$option['product_option_id']] = $option['product_option_value_id'];
							} elseif ($option['type'] == 'checkbox') {
								$option_data[$option['product_option_id']][] = $option['product_option_value_id'];
							} elseif ($option['type'] == 'text' || $option['type'] == 'textarea' || $option['type'] == 'file' || $option['type'] == 'date' || $option['type'] == 'datetime' || $option['type'] == 'time') {
								$option_data[$option['product_option_id']] = $option['value'];						
							}
						}
					}

					if (version_compare(VERSION, '1.5.6', 'lt')) $this->cart->add($order_product['product_id'], $order_product['quantity'], $option_data);
					else $this->cart->add($order_product['product_id'], $order_product['quantity'], $option_data, 0);					
				}

				$this->session->data['customer_id'] = $neworder['customer_id'];

				if ($this->cart->hasShipping()) {
					$this->tax->setShippingAddress($this->request->post['shipping_country_id'], $this->request->post['shipping_zone_id']);
				} else {
					$this->tax->setShippingAddress($this->config->get('config_country_id'), $this->config->get('config_zone_id'));
				}
			
				$this->tax->setPaymentAddress($this->request->post['payment_country_id'], $this->request->post['payment_zone_id']);				
				$this->tax->setStoreAddress($this->config->get('config_country_id'), $this->config->get('config_zone_id'));					

 				// Recalculate shipping methods

				$country_info = $this->model_localisation_country->getCountry($this->request->post['shipping_country_id']);

				if ($country_info) {
					$country = $country_info['name'];
					$iso_code_2 = $country_info['iso_code_2'];
					$iso_code_3 = $country_info['iso_code_3'];
					$address_format = $country_info['address_format'];
				} else {
					$country = '';
					$iso_code_2 = '';
					$iso_code_3 = '';	
					$address_format = '';
				}

				if (isset($this->request->get['shipping_zone_id'])) $shipping_zone_id = $this->request->get['shipping_zone_id'];
				else $shipping_zone_id = $this->request->post['shipping_zone_id'];
			
				$zone_info = $this->model_localisation_zone->getZone($shipping_zone_id);
						
				if ($zone_info) {
					$zone = $zone_info['name'];
					$zone_code = $zone_info['code'];
				} else {
					$zone = '';
					$zone_code = '';
				}					
	
				$address_data = array(
					'firstname'      => $this->request->post['shipping_firstname'],
					'lastname'       => $this->request->post['shipping_lastname'],
					'company'        => $this->request->post['shipping_company'],
					'address_1'      => $this->request->post['shipping_address_1'],
					'address_2'      => $this->request->post['shipping_address_2'],
					'postcode'       => $this->request->post['shipping_postcode'],
					'city'           => $this->request->post['shipping_city'],
					'zone_id'        => $shipping_zone_id,
					'zone'           => $zone,
					'zone_code'      => $zone_code,
					'country_id'     => $this->request->post['shipping_country_id'],
					'country'        => $country,	
					'iso_code_2'     => $iso_code_2,
					'iso_code_3'     => $iso_code_3,
					'address_format' => $address_format
				);		

				$shipping_code = explode(".", $neworder["shipping_code"]);
				
				$shipping_method = array();
				$shipping_quotes = array();
				
				$model = 'shipping/'.$shipping_code[0];

				if (file_exists(DIR_APPLICATION.'model/'.$model.'.php')) {
					$this->load->model($model);
					
					if (method_exists($this->{'model_shipping_'.$shipping_code[0]}, 'getQuote')) {
						$shipping_quotes = $this->{'model_shipping_'.$shipping_code[0]}->getQuote($address_data); 
					}
					
					foreach ($shipping_quotes["quote"] as $quote) {
						if ($quote['code'] == $neworder["shipping_code"]) $shipping_method = $quote;
					}
				}

				if (!empty($shipping_method)) {
					$this->session->data['shipping_method'] = $shipping_method;
				} else {
					foreach ($neworder["order_total"] as $total) {
						if ($total['code'] == 'shipping') {
							$shipping_method["cost"] = $total['value'];
							$shipping_method["text"] = $total['text'];
						}
					}
					
					$shipping_method["code"] = $neworder["shipping_code"];
					$shipping_method["title"] = $neworder["shipping_method"];
					$shipping_method["zone"] = $neworder["shipping_zone_id"];
					$shipping_method["tax_class_id"] = false;					
				}

  				// Recalculate totals for new order

				$newtotal = array();
				$total = 0;
				$newtaxes = $this->cart->getTaxes();
				$partial = false;
					
				$this->session->data['payment_method']['country_id'] = $neworder['payment_country_id'];
				$this->session->data['payment_method']['zone_id'] = $neworder['payment_zone_id'];
				$this->session->data['payment_method']['code'] = $neworder['payment_code'];
				$this->session->data['payment_method']['title'] = $neworder['payment_method'];

				$this->load->model('setting/extension');
				
				$sort_order = array(); 

				$this->load->model('setting/extension');
				$totals = $this->model_setting_extension->getInstalled('total');
		
				foreach ($totals as $key => $code) {
					$sort_order[$key] = $this->config->get($code.'_sort_order');
				}
			
				array_multisort($sort_order, SORT_ASC, $totals);
			
				foreach ($totals as $code) {
					if ($this->config->get($code.'_status')) {
						$model = 'total/'.$code;
	
						if (file_exists(DIR_APPLICATION.'model/'.$model.'.php')) {		
							$this->load->model($model);
							$this->{'model_total_'.$code}->getTotal($newtotal, $total, $newtaxes);
						} else {
							$partial = true;
						}							
					}
				}
		
				$sort_order = array(); 
		  
				foreach ($newtotal as $key => $value) {
					$sort_order[$key] = $value['sort_order'];
				}
	
				array_multisort($sort_order, SORT_ASC, $newtotal);

				if (!empty($newtotal)) $neworder['order_total'] = $newtotal;
				
				// Recalculate shipping for old order

				// Need to reset Cart class first

				if (class_exists('AceShop')) {
					if (!class_exists('AceShopOpencart')) require_once(JPATH_SITE.'/components/com_aceshop/aceshop/opencart.php');
        			AceShopOpencart::$registry->set('cart', new Cart(AceShopOpencart::$registry));
				} elseif (class_exists('MijoShop')) {
					if (!class_exists('MijoShopOpencart')) require_once(JPATH_SITE.'/components/com_mijoshop/mijoshop/opencart.php');
        			MijoShopOpencart::$registry->set('cart', new Cart(MijoShopOpencart::$registry));
				} else {
					$this->registry->set('cart', new Cart($this->registry));
				}

				$option_data = array();
				$this->session->data['cart'] = array();
				
				foreach ($oldorder['order_product'] as $order_product) {
					if (isset($order_product['order_option'])) {
						foreach ($order_product['order_option'] as $option) {
							if ($option['type'] == 'select' || $option['type'] == 'radio' || $option['type'] == 'image') { 
								$option_data[$option['product_option_id']] = $option['product_option_value_id'];
							} elseif ($option['type'] == 'checkbox') {
								$option_data[$option['product_option_id']][] = $option['product_option_value_id'];
							} elseif ($option['type'] == 'text' || $option['type'] == 'textarea' || $option['type'] == 'file' || $option['type'] == 'date' || $option['type'] == 'datetime' || $option['type'] == 'time') {
								$option_data[$option['product_option_id']] = $option['value'];						
							}
						}
					}

					if (version_compare(VERSION, "1.5.6", "lt")) $this->cart->add($order_product['product_id'], $order_product['quantity'], $option_data);
					else $this->cart->add($order_product['product_id'], $order_product['quantity'], $option_data, 0);					
				}

				if (!empty($shipping_quotes)) {
					foreach ($shipping_quotes["quote"] as $quote) {
						if ($quote['code'] == $oldorder["shipping_code"]) $shipping_method = $quote;
					}
				}

				if (!empty($shipping_method)) {
					$this->session->data['shipping_method'] = $shipping_method;
				} else {
					foreach ($oldorder["order_total"] as $total) {
						if ($total['code'] == 'shipping') {
							$shipping_method["cost"] = $total['value'];
							$shipping_method["text"] = $total['text'];
						}
					}
					
					$shipping_method["code"] = $oldorder["shipping_code"];
					$shipping_method["title"] = $oldorder["shipping_method"];
					$shipping_method["zone"] = $oldorder["shipping_zone_id"];
					$shipping_method["tax_class_id"] = false;					
				}

  				// Recalculate totals for old order
  				
				$oldtotal = array();
				$total = 0;
				$oldtaxes = $this->cart->getTaxes();
				$partial = false;
					
				$this->session->data['payment_method']['country_id'] = $oldorder['payment_country_id'];
				$this->session->data['payment_method']['zone_id'] = $oldorder['payment_zone_id'];
				$this->session->data['payment_method']['code'] = $oldorder['payment_code'];
				$this->session->data['payment_method']['title'] = $oldorder['payment_method'];

				$this->load->model('setting/extension');
				
				$sort_order = array(); 
			
				$this->load->model('setting/extension');
				$totals = $this->model_setting_extension->getInstalled('total');
		
				foreach ($totals as $key => $code) {
					$sort_order[$key] = $this->config->get($code.'_sort_order');
				}
			
				array_multisort($sort_order, SORT_ASC, $totals);
			
				foreach ($totals as $code) {
					if ($this->config->get($code.'_status')) {
						$model = 'total/'.$code;
	
						if (file_exists(DIR_APPLICATION.'model/'.$model.'.php')) {		
							$this->load->model($model);
							$this->{'model_total_'.$code}->getTotal($oldtotal, $total, $oldtaxes);
						} else {
							$partial = true;
						}							
					}
				}

				$sort_order = array(); 
		  
				foreach ($oldtotal as $key => $value) {
					$sort_order[$key] = $value['sort_order'];
				}
	
				array_multisort($sort_order, SORT_ASC, $oldtotal);

				if (!empty($oldtotal)) $oldorder['order_total'] = $oldtotal;
				
				// Save both orders
				
				$this->language->load('sale/order');
				$this->document->setTitle($this->language->get('heading_title'));

				if ($this->config->get('config_split_status')) $order_status = $this->config->get('config_split_status');
				else $order_status = $oldorder['order_status_id'];

				$this->model_sale_order->addOrder($neworder);
				$newid = $this->session->data['split_order_id'];

				$oldorder['notify'] = '0';
				$oldorder['comment'] = sprintf($this->language->get('text_split_combase'), $newid);
				
				$this->model_sale_order->editOrder($oldid, $oldorder);

				$data = array(
					'order_status_id' => $order_status,
					'notify' => $this->config->get('config_split_notify'),
					'comment' => sprintf($this->language->get('text_split_comsplit'), $oldid));
				
				$this->model_sale_order->addOrderHistory($newid, $data);

				$this->session->data['success'] = $this->language->get('text_success');
				
				if (!empty($newtotal) && !$partial) {					
					$this->session->data['success'] .= '<br>'.$this->language->get('message_split_all');
				} elseif (!empty($newtotal) && $partial) {					
					$this->session->data['success'] .= '<br>'.$this->language->get('message_split_partial');
				} else {					
					$this->session->data['success'] .= '<br>'.$this->language->get('message_split_none');
				}
						  
				$url = '';

				if (isset($this->request->get['filter_order_id'])) {
					$url .= '&filter_order_id='.$this->request->get['filter_order_id'];
				}
			
				if (isset($this->request->get['filter_customer'])) {
					$url .= '&filter_customer='.urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));
				}
												
				if (isset($this->request->get['filter_order_status_id'])) {
					$url .= '&filter_order_status_id='.$this->request->get['filter_order_status_id'];
				}
		
				if (isset($this->request->get['filter_total'])) {
					$url .= '&filter_total='.$this->request->get['filter_total'];
				}
						
				if (isset($this->request->get['filter_date_added'])) {
					$url .= '&filter_date_added='.$this->request->get['filter_date_added'];
				}
			
				if (isset($this->request->get['filter_date_modified'])) {
					$url .= '&filter_date_modified='.$this->request->get['filter_date_modified'];
				}
													
				if (isset($this->request->get['sort'])) {
					$url .= '&sort='.$this->request->get['sort'];
				}

				if (isset($this->request->get['order'])) {
					$url .= '&order='.$this->request->get['order'];
				}

				if (isset($this->request->get['page'])) {
					$url .= '&page='.$this->request->get['page'];
				}

				unset($this->session->data['cart']);
				unset($this->session->data['customer_id']);
				unset($this->session->data['shipping_method']);
				unset($this->session->data['shipping_country_id']);
				unset($this->session->data['shipping_zone_id']);
			
				$this->redirect($this->url->link('sale/order', 'token='.$this->session->data['token'].$url, 'SSL'));
			}
			
			]]></add>
		</operation>		
	</file>
	
	<file name="admin/model/sale/order.php">		
		<operation>
			<search position="after"><![CDATA[$order_id = $this->db->getLastId();]]></search>
			<add><![CDATA[
			
			$this->session->data['split_order_id'] = $order_id;
			
			]]></add>
		</operation>	
		<operation>
			<search position="before"><![CDATA[if ($currency_info) {]]></search>
			<add><![CDATA[
			
			if ($data['currency_id'] && $data['currency_code'] && $data['currency_value']) {
				$currency_info = array(
					'currency_id' => $data['currency_id'],
					'code' => $data['currency_code'],
					'value' => $data['currency_value']);
			}
			
			]]></add>
		</operation>		
	</file>
	
	<file name="admin/view/template/sale/order_form.tpl">		
		<operation>
			<search position="replace"><![CDATA[<div class="buttons">]]></search>
			<add><![CDATA[
			
			<div class="buttons"><a id="split-button" class="button"><?php echo $button_split; ?></a>
			
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[<?php echo $footer; ?>]]></search>
			<add><![CDATA[
			
			<script type="text/javascript"><!--
			
			$('body').on('click', '#split-button', function() {
				var checked = [];

				$("input[name='splitted[]']:checked").each(function () {
    				checked.push(parseInt($(this).val()));
				});

				if (checked == "") {
					alert('<?php echo $this->language->get('error_split_products'); ?>');
				} else if (checked.length == $("input[name='splitted[]']").length) {
					alert('<?php echo $this->language->get('error_base_empty'); ?>');
				} else {
					$('#form').attr('action', '<?php echo htmlspecialchars_decode($split); ?>');
					$('#form').submit();
				}
			});
			
			//--></script> 			
			]]></add>
		</operation>		
		<operation>
			<search position="before" index="1"><![CDATA[<td class="left"><?php echo $column_product; ?></td>]]></search>
			<add><![CDATA[
			
			<?php if (count($order_products) > 1) { ?>			
				<td><?php echo $text_split; ?></td>
			<?php } ?>
			
			]]></add>
		</operation>
		<operation>
			<search position="before" index="1"><![CDATA[<td class="left"><?php echo $order_product['name']; ?><br />]]></search>
			<add><![CDATA[
			
			<?php if (count($order_products) > 1) { ?>
				<td class="center" style="width: 3px;">
					<input type="checkbox" name="splitted[]" value="<?php echo $order_product['order_product_id']; ?>" />
				</td>
			<?php } ?>
			
			]]></add>
		</operation>		
	</file>
	
	<!-- Admin: Language -->
	
	<file name="admin/language/english/*.php">		
		<operation>
			<search position="after"><![CDATA[<?php]]></search>
			<add><![CDATA[

			$_['heading_title_split'] 	= "Split Order";

			$_['entry_split_notify']    = "Notify Customer";
			$_['help_split_notify']		= "Send email to customer and inform, that his order was split.";
			
			$_['entry_split_status']    = "Order Status";
			$_['help_split_status']     = "Splitted order status (Default status - base order status).";
			
			$_['button_split'] 			= "Split";
			
			$_['text_split'] 			= "Split";
			$_['text_split_default'] 	= "Default status";
			$_['text_split_combase']	= "Order was split into two. New order number: %s.";
			$_['text_split_comsplit'] 	= "Splitted from order %s.";
			
			$_['message_split_all'] 	= "Shipping costs and totals were recalculated.";
			$_['message_split_none'] 	= "Shipping costs and totals NOT recalculated.";
			$_['message_split_partial'] = "Shipping costs and totals PARTIALLY recalculated.";
			
			$_['error_split_products'] 	= "You did not select any products to split.";
			$_['error_base_empty'] 		= "At least one product must stay in base order.";
			
			]]></add>
		</operation>
	</file>
			
</modification>